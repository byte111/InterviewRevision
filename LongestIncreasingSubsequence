// time: O(n2) space: O(n)  https://leetcode.com/problems/longest-increasing-subsequence
class Solution {
    public int lengthOfLIS(int[] nums) {
        int max = Integer.MIN_VALUE;
        int lis[] = new int[nums.length];
        for(int i=0;i<nums.length;i++){
            lis[i] =1;
        }
        for(int i=nums.length-1;i>=0;i--){
            for(int j=i+1;j<nums.length;j++){
                if(nums[i]<nums[j]){
                    lis[i] = Math.max(lis[i], lis[j]+1);
                }
            }
        }
        for(int n:lis) {
            if(n>max) max = n;
        }
        return max;
    }
}
