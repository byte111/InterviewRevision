
/*
https://leetcode.com/problems/longest-palindromic-substring/description/
Time: O(n2)
Space: O(1)
*/
class Solution {
    public String longestPalindrome(String s) {
        if (s.length() == 0) return "";
        String ans = s.substring(0,1);
        for(int i=0;i<s.length();i++){
            int l = i;
            int r = i;
            while(l>=0 && r<s.length() && s.charAt(l) == s.charAt(r)) {
                if (r-l+1 > ans.length()) {
                    ans = s.substring(l,r+1);
                }
                l--;
                r++;
            }
            l = i;
            r = i +1;
            while(l>=0 && r<s.length() && s.charAt(l) == s.charAt(r)) {
                if (r-l+1 > ans.length()) {
                    ans = s.substring(l,r+1);
                }
                l--;
                r++;
            }
        }
        return ans;
    }

}
