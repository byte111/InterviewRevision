// Time: O(n2) Space: O(n2)
// https://leetcode.com/problems/longest-common-subsequence/
class Solution {
     public int longestCommonSubsequence(String text1, String text2) {
        int dp[][] = new int[text2.length()+1][text1.length()+1];
        for(int i=text2.length()-1;i>=0;i--) {
            for(int j=text1.length()-1;j>=0;j--) {
                if (text1.charAt(j) == text2.charAt(i)) {
                    dp[i][j] = dp[i+1][j+1] +1;
                } else {
                    dp[i][j] = Math.max(dp[i+1][j], dp[i][j+1]);
                }
            }
        }
        return dp[0][0];
    }
}
