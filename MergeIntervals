    /* Time: O(nlogn)
        Space: O(n)
        https://leetcode.com/problems/merge-intervals
    */
class Solution {
    public int[][] merge(int[][] intervals) {
        Arrays.sort(intervals, (a,b) -> Integer.compare(a[0], b[0]));
        LinkedList<int[]> merged = new LinkedList<>();
        merged.add(intervals[0]);
        for(int i=1;i<intervals.length;i++) {
            int last[] = merged.get(merged.size()-1);
            if (intervals[i][0] <= last[1]) {
                last[1] = Math.max(last[1], intervals[i][1]);
                merged.removeLast();
                merged.add(last);
            } else {
                merged.add(intervals[i]);
            }
        }
        int ans[][] = new int[merged.size()][2];
        for(int i=0;i<merged.size();i++){
            ans[i] = new int[]{merged.get(i)[0], merged.get(i)[1]};
        }
        return ans;
    }
}
